{
  "version": 3,
  "sources": ["../../../../src/handlers/appointmentCL.ts"],
  "sourcesContent": ["import { SQSEvent } from 'aws-lambda';\r\nimport { EventBridge } from 'aws-sdk';\r\n\r\nconst eventBridge = new EventBridge();\r\n\r\nexport const handler = async (event: SQSEvent) => {\r\n  for (const record of event.Records) {\r\n    const message = JSON.parse(record.body);\r\n    const { appointmentId, insuredId, scheduleId } = message;\r\n\r\n    console.log(`Processing CL appointment ${appointmentId}`);\r\n\r\n    // Simular guardado en RDS\r\n    console.log(`Saving appointment ${appointmentId} to RDS (MySQL)...`);\r\n\r\n    // Publicar evento en EventBridge\r\n    await eventBridge.putEvents({\r\n      Entries: [\r\n        {\r\n          Source: 'appointment.cl',\r\n          DetailType: 'AppointmentCompleted',\r\n          Detail: JSON.stringify({\r\n            appointmentId,\r\n            insuredId,\r\n            status: 'completed',\r\n          }),\r\n          EventBusName: process.env.EVENT_BUS_NAME,\r\n        },\r\n      ],\r\n    }).promise();\r\n  }\r\n\r\n  return { statusCode: 200 };\r\n};\r\n"],
  "mappings": ";;;;;;;;;;;;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;AACA,qBAA4B;AAE5B,IAAM,cAAc,IAAI,2BAAY;AAE7B,IAAM,UAAU,OAAO,UAAoB;AAChD,aAAW,UAAU,MAAM,SAAS;AAClC,UAAM,UAAU,KAAK,MAAM,OAAO,IAAI;AACtC,UAAM,EAAE,eAAe,WAAW,WAAW,IAAI;AAEjD,YAAQ,IAAI,6BAA6B,aAAa,EAAE;AAGxD,YAAQ,IAAI,sBAAsB,aAAa,oBAAoB;AAGnE,UAAM,YAAY,UAAU;AAAA,MAC1B,SAAS;AAAA,QACP;AAAA,UACE,QAAQ;AAAA,UACR,YAAY;AAAA,UACZ,QAAQ,KAAK,UAAU;AAAA,YACrB;AAAA,YACA;AAAA,YACA,QAAQ;AAAA,UACV,CAAC;AAAA,UACD,cAAc,QAAQ,IAAI;AAAA,QAC5B;AAAA,MACF;AAAA,IACF,CAAC,EAAE,QAAQ;AAAA,EACb;AAEA,SAAO,EAAE,YAAY,IAAI;AAC3B;",
  "names": []
}
